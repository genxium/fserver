#!/bin/bash
error_msg() {
    echo -e "`date +"%F %T"` [error] $@"
    exit 1
}

# 打印信息
info_msg() {
    echo -e "`date +"%F %T"` [info] $@"
}

# 打印警告
warning_msg() {
    echo -e "`date +"%F %T"` [warning] $@"
}


## 参数解析
## 参考http://www.cnblogs.com/FrankTan/archive/2010/03/01/1634516.html
OriginArgs="$@"
TEMP=`getopt -o -c:,h -l help,cmd:,config:,nodename:,log_dir: -n fakeoauth2server -- "$@"`

if [ $? != 0 ] ; then
    error_msg "解析选项出错";
fi

# Note the quotes around `$TEMP': they are essential!
eval set -- "$TEMP"

# not support link, please use real file path
SCRIPT_DIR=$(cd ${0%/*} && pwd) # 执行脚本所在目录
SCRIPT_NAME=${0##*/} # 可以用来做工具的节点名
PROJECT_HOME=${SCRIPT_DIR%/*/*} # 项目的根目录
DATA_HOME=$PROJECT_HOME/data/
RELEASE_DIR=${PROJECT_HOME%/*} #项目根目录上一级

## 默认值
NODENAME=fakeoauth2server@127.0.0.1
LOG_DIR=/tmp/fakeoauth2server_log/
CONFIG_FILE=$PROJECT_HOME/sh/app/sys.config
while true ; do
    case "$1" in
        --config) 
            CONFIG_FILE=$2
            shift 2;;
        --nodename) 
            NODENAME=$2
            shift 2;;
        --log_dir) 
            LOG_DIR=$2
            shift 2;;
        -c|--cmd) 
            MODE=$2
            shift 2;;
        --) 
            shift ; 
            break ;;
        *)
            # echo $1
            # echo $2
            if [[ "$1" != "" && "$2" != "--" && "$2" != "" ]]; then
                shift 2
            elif [[ "$1" != "" ]]; then
                shift
            else
                error_msg "UnKnown Option $1"
                exit 1
            fi
    esac
done

ERL=erl 
COOKIE=fakeoauth2server_cookie
## 数据存储
MNESIA_BASE=$DATA_HOME/mnesia
MNESIA_DIR=$MNESIA_BASE/$NODENAME
DETS_DIR=$DATA_HOME/dets/$NODENAME

DATETIME=`date "+%Y%m%d-%H:%M:%S"`
export ERL_CRASH_DUMP=$LOG_DIR/erl_crash_$DATETIME.dump ## for crash_dump

export ERL_MAX_ETS_TABLES=4000 ## default 1400

## 设置ulimit
if [[ $UID == 0 ]]; then
    ulimit -HSn 65535
fi
if [ -d "$PROJECT_HOME/_build/default/lib/" ]; then
    EBIN_ARGS="-pa $PROJECT_HOME/_build/default/lib/*/ebin $PROJECT_HOME/deps/*/ebin "
else
    EBIN_ARGS="-pa $PROJECT_HOME/apps/*/ebin"
fi

if [ -f "$CONFIG_FILE" ]; then
    CONFIG_ARGS="-config $CONFIG_FILE"
elif [[ "$CONFIG_FILE" == "" ]]; then
    CONFIG_ARGS=""
else
    error_msg "CONFIG_FILE: $CONFIG_FILE 不存在"
    exit 1
fi

APP_ENV=" -fakeoauth2server log_dir \"$LOG_DIR\""
START_APP=" -s main start $APP_ENV "

# ARGS变量
BASE_ARGS=" -smp auto -setcookie $COOKIE +K true +A 120 +W w -boot start_sasl -hidden "
NODENAME_ARGS=" -name ${NODENAME}"
MNESIA_ARGS=" -mnesia dump_log_write_threshold 50000 -mnesia dc_dump_limit 64 -mnesia dir \"${MNESIA_DIR}\""

app_control() {
    $ERL $EBIN_ARGS -noinput -setcookie $COOKIE -name fakeoauth2server_control@127.0.0.1 -boot start_clean -s main_control -hidden -extra "$@"
}

started() {
    local ret=`app_control --nodename $NODENAME -c started`
    info_msg $ret
    if [[ $ret == "true" ]]; then
        return 0
    else
        return 1
    fi
}

# 判断节点是否crash
crashed() 
{
    if [ -f $ERL_CRASH_DUMP ]; then
        return 0
    fi
    return 1
}

## 注意：\换行后面不可以有空格
start() {
    if started; then
        error_msg "节点$NODENAME已经启动"
    fi
    $ERL $BASE_ARGS $EBIN_ARGS $START_APP $CONFIG_ARGS -noinput -detached $NODENAME_ARGS $MNESIA_ARGS
    result=$?
    while true; do
        if [ $result -ne 0 ]; then
            error_msg "启动失败"
            exit 1
        elif crashed; then
            error_msg "启动失败，发生crash！"
            exit 1
        elif started; then
            info_msg "启动完成"
            exit 0
        else
            sleep 0.01
        fi
    done
}
live() {
    if started; then
        error_msg "节点$NODENAME已经启动"
    fi
    $ERL $BASE_ARGS $EBIN_ARGS $START_APP $CONFIG_ARGS $NODENAME_ARGS $MNESIA_ARGS 
}

attach() {
    if ! started; then
        error_msg "$NODENAME 未启动"
    fi
    $ERL $BASE_ARGS -name attach_$NODENAME -remsh $NODENAME
}


case $MODE in
    'start') 
        start;;
    'live')
        live;;
    'attach')
        attach;;
    *)
        app_control $OriginArgs ;;
esac


